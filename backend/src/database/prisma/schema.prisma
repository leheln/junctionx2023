generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id           String  @id @default(uuid())
  zipCode      String
  city         String
  street       String
  streetNumber Int
  events       Event[]
  users        User[]
}

model User {
  id              String            @id @default(uuid())
  email           String            @unique
  password        String
  firstName       String
  lastName        String
  adressId        String?
  address         Address?          @relation(fields: [adressId], references: [id])
  organizedEvents Event[]
  attendances     EventAttendance[]
  consumptions    Consumption[]
  passes          Pass[]
  storeItems      StoreItem[]
  credits         Int               @default(0)
}

model Event {
  id          String            @id @default(uuid())
  organizerId String?
  organizer   User?             @relation(fields: [organizerId], references: [id])
  credits     Int
  title       String
  description String
  image       String
  adressId    String?
  address     Address?          @relation(fields: [adressId], references: [id])
  date        DateTime
  type        EventType
  attendance  EventAttendance[]
}

model EventAttendance {
  id        String  @id @default(uuid())
  eventId   String?
  event     Event?  @relation(fields: [eventId], references: [id])
  userId    String?
  user      User?   @relation(fields: [userId], references: [id])
  completed Boolean
}

enum EventType {
  GARBAGE_COLLECTION
  TREE_PLANTING
  WORKSHOP
}

model Consumption {
  id        String          @id @default(uuid())
  userId    String?
  user      User?           @relation(fields: [userId], references: [id])
  dateStart DateTime
  dateEnd   DateTime
  amount    Int
  credits   Int
  type      ConsumptionType
}

enum ConsumptionType {
  ELECTRICITY
  WATER
  GAS
}

model Pass {
  id        String   @id @default(uuid())
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  type      PassType
  dateStart DateTime
  dateEnd   DateTime
  credits   Int
}

enum PassType {
  PUBLIC_TRANSPORT
  BIKE_PASS
}

model StoreItem {
  id          String  @id @default(uuid())
  credit      Int
  image       String
  description String
  userId      String?
  creator     User?   @relation(fields: [userId], references: [id])
}
